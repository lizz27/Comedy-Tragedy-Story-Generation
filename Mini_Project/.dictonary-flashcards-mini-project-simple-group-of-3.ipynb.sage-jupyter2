{"backend_state":"running","connection_file":"/projects/6a848d56-5da1-43fb-bfc9-9172977ceeb4/.local/share/jupyter/runtime/kernel-819b5262-f05f-4f39-9df5-618597fa9e69.json","kernel":"nlp_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"name":"python"},"orig_nbformat":4},"trust":true,"type":"settings"}
{"cell_type":"code","end":1656425825165,"exec_count":3,"id":"582ac7","input":"dict['key2'] = 'value2'\nprint(dict)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"{'key0': 'value0', 'key1': 'value1', 'key2': 'value2'}\n"}},"pos":7,"start":1656425825163,"state":"done","type":"cell"}
{"cell_type":"code","end":1656425840789,"exec_count":4,"id":"0cb9ba","input":"dict = {'sad':'value0', 'key1':'value1'}","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"pos":3,"start":1656425840777,"state":"done","type":"cell"}
{"cell_type":"code","end":1656425859905,"exec_count":5,"id":"4e2c18","input":"print(dict['key1'])\nprint(dict['sad'])","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"value1\nvalue0\n"}},"pos":5,"start":1656425859893,"state":"done","type":"cell"}
{"cell_type":"code","end":1656426188687,"exec_count":8,"id":"e3865f","input":"guess = input('enter your guess')\n# or\nprompt = 'enter your guess'\nguess = input(prompt)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"input","opts":{"password":false,"prompt":"enter your guess"},"value":"hello"},"1":{"name":"input","opts":{"password":false,"prompt":"enter your guess"},"value":"hello"}},"pos":20,"start":1656426174246,"state":"done","type":"cell"}
{"cell_type":"code","end":1656426231061,"exec_count":12,"id":"44f5ce","input":"guess = input()","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"input","opts":{"password":false,"prompt":""},"value":"corn"}},"pos":18,"start":1656426219774,"state":"done","type":"cell"}
{"cell_type":"code","end":1656426731969,"exec_count":22,"id":"0b98ef","input":"guess = 'English is a good language'\nanswer = 'Python is the best language!'\nif guess == answer:\n    print('goood job! you got it right!')\nelse:\n    print('To bad. The answer was:', answer) # note: when the print function is given 2 inputs, it prints both seperated by a space","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"To bad. The answer was: Python is the best language!\n"}},"pos":26,"start":1656426731962,"state":"done","type":"cell"}
{"cell_type":"code","end":1656426934189,"exec_count":28,"id":"5c6041","input":"for key, value in flashcards.items():\n    guess = input('enter your guess')\n    if key == guess:\n        print(value)\nflashcards['keyblade'] = 'sora'\nprint(flashcards)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"input","opts":{"password":false,"prompt":"enter your guess"},"value":"dic"},"1":{"name":"stdout","text":"dictionary\n"},"2":{"name":"input","opts":{"password":false,"prompt":"enter your guess"},"value":"corn"},"3":{"name":"stdout","text":"maize\n"},"4":{"name":"input","opts":{"password":false,"prompt":"enter your guess"},"value":"toast"},"5":{"name":"stdout","text":"recooked bread\n"},"6":{"name":"input","opts":{"password":false,"prompt":"enter your guess"},"value":"keyblade"},"7":{"name":"stdout","text":"sora\n{'dic': 'dictionary', 'corn': 'maize', 'toast': 'recooked bread', 'keyblade': 'sora'}\n"}},"pos":22,"start":1656426919002,"state":"done","type":"cell"}
{"cell_type":"code","end":1656426958150,"exec_count":29,"id":"1fac8c","input":"def param(arg0, arg1):\n    print(arg0, arg1)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"pos":32,"start":1656426958144,"state":"done","type":"cell"}
{"cell_type":"code","end":1656427380352,"exec_count":33,"id":"34cd53","input":"flashcards = {'dic':'dictionary','corn':'maize', 'toast': 'recooked bread'}","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"pos":11,"start":1656427380344,"state":"done","type":"cell"}
{"cell_type":"code","end":1656427387572,"exec_count":34,"id":"9876b6","input":"dict = {'key0':'value0', 'key1':'value1', 'key2':'value2'}","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"pos":14,"start":1656427387549,"state":"done","type":"cell"}
{"cell_type":"code","end":1656427397680,"exec_count":35,"id":"8ffae4","input":"for key, value in flashcards.items():\n    print(key,value)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"dic dictionary\ncorn maize\ntoast recooked bread\n"}},"pos":16,"start":1656427397668,"state":"done","type":"cell"}
{"cell_type":"code","end":1656427418842,"exec_count":36,"id":"402900","input":"counter = 0\ndef inc():\n    global counter\n    counter += 1\ninc()\ncounter","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"data":{"text/plain":"1"},"exec_count":36}},"pos":40,"start":1656427418817,"state":"done","type":"cell"}
{"cell_type":"code","end":1656427421411,"exec_count":37,"id":"d5ddaa","input":"print('counter value:', counter)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"counter value: 1\n"}},"pos":42,"start":1656427421400,"state":"done","type":"cell"}
{"cell_type":"code","end":1656427828743,"exec_count":48,"id":"86be32","input":"counter = 0\nflashcards['keyblade'] = 'sora'\nfor key, value in flashcards.items():\n    print(value)\n    guess = input('enter your guess, hint is above')\n    if key == guess:\n        print('you got it right')\n        counter += 1\n    else:\n        print('wrong, the answer is', key)\n    \nprint('number correct:', counter)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"dictionary\n"},"1":{"name":"input","opts":{"password":false,"prompt":"enter your guess, hint is above"},"value":"dic"},"2":{"name":"stdout","text":"you got it right\nmaize\n"},"3":{"name":"input","opts":{"password":false,"prompt":"enter your guess, hint is above"},"value":"corn"},"4":{"name":"stdout","text":"you got it right\nrecooked bread\n"},"5":{"name":"input","opts":{"password":false,"prompt":"enter your guess, hint is above"},"value":"toast"},"6":{"name":"stdout","text":"you got it right\nsora\n"},"7":{"name":"input","opts":{"password":false,"prompt":"enter your guess, hint is above"},"value":"keyblade"},"8":{"name":"stdout","text":"you got it right\nnumber correct: 4\n"}},"pos":44,"start":1656427806181,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"407f72","input":"def ret():\n    return 'Bananas'","metadata":{"vscode":{"languageId":"plaintext"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"57c7c8","input":"print('PythOn'.lower())\nprint('python'.lower())\nprint('PythOn'.lower()=='python'.lower())","metadata":{"vscode":{"languageId":"plaintext"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6e5106","input":"val = ret()\nprint(val)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c11587","input":"del dict['key2']\nprint(dict)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"df5391","input":"def func():\n    pass # pass just means there's nothing here - stops the code from breaking","metadata":{"vscode":{"languageId":"plaintext"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f2791e","input":"param('AI','CAMP')","metadata":{"vscode":{"languageId":"plaintext"}},"pos":34,"type":"cell"}
{"cell_type":"markdown","id":"01e1e0","input":"<h1>Running the loop</h1>","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"0e6282","input":"Then we can call it like this:","pos":33,"type":"cell"}
{"cell_type":"markdown","id":"3988ad","input":"But how will the student know what to write? To adress this, the input function allows us to give a prompt","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"489204","input":"When we have this dictionary, we can run through it with a for loop like this:","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"4efc3a","input":"<h3>The Flashcards</h3>","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"51ec8c","input":"Additionally, a function can hand back a value using a return statement","pos":35,"type":"cell"}
{"cell_type":"markdown","id":"522d2e","input":"Notice the curly braces, which denote a dictionary, and the colon, which pairs the key and the value. The values paired together can be anything.\n\nThis pairing allows us to access the value like this (and we can print with the print() statement):\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"5c54bb","input":"Now put this all together: (if you want to use return, you can work to integrate it with your team)\n\n","pos":43,"type":"cell"}
{"cell_type":"markdown","id":"5ea305","input":"We can compare our guess with the answer using an if else block","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"61d054","input":"To make this easier, we can package this all into a function, which we can define as follows:\n\n","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"664401","input":"Then print it like this","pos":41,"type":"cell"}
{"cell_type":"markdown","id":"675803","input":"A function can also take in parameters (the number isn't limited):","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"799b66","input":"This value can then be accessed as follows: (If you use parameters, the value can change based on the situation)","pos":37,"type":"cell"}
{"cell_type":"markdown","id":"87d40d","input":"Now make a dictionary of the flashcards (name it flashcards so other code syncs together) (the definition should be the key)\n\n","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"99444c","input":"This loops through each pair in the dictionary, saving the key to the variable key, and the value to the variable value\n\nNow that we have the keys, we can collect the user's guess using the input function and assign the result to a variable\n\n","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"9aa43b","input":"<h1>Validating guesses</h1>\n\n","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"ad3b24","input":"when your piece works, \n\nadd the code check\\(v1,v2\\) to the end of your loop \\(where v1 is the name of your guess variable, and v2 is the name of the answer\\)\n\n","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"b7a7af","input":"In python, we can create a dictionary like this:","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"b999f8","input":"For this section, we will be creating the game loop. To do that, we need a dictionary. A sample of that is supplied here (make sure to run the next cell, but you don't need to do anything with it)","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"c9004c","input":"<h1>Flash Card Mini Project</h1>\nThis is a project covering a range of python topics, from storage to functions. This lets you define flashcards, then test your knowledge against them.\n\nThis project is broken into 3 parts. The first covers creating and storing the flashcards, the second covers creating the loop, and the third covers validating the input","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"ca0462","input":"If you have a variable, you can also increment it in a function, like this","pos":39,"type":"cell"}
{"cell_type":"markdown","id":"ddc93d","input":"Now you can put it together to make the loop:\n\n","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"df06f8","input":"Aditionally, we can add an entry like this:","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"e6c8d0","input":"And finally, we can remove an entry like this:","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"f7d172","input":"But what if our user enters 'Python' and we wanted 'python' or the other way around? to do this, we make the cases match:","pos":27,"type":"cell"}
{"id":"bb0ccb","input":"","pos":6.5,"type":"cell"}
{"id":"ca7681","input":"","pos":45,"type":"cell"}
{"id":0,"time":1656432379437,"type":"user"}
{"last_load":1656425769470,"type":"file"}